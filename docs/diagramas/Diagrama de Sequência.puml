@startuml Diagrama de  Sequência
title Diagrama de Sequência Melhorado - Reivindicar Rota

actor "Jogador Ativo" as jogadorAtivo
participant ":Jogador" as jogador
participant ":Rota" as rota
participant ":Baralho" as baralho

jogadorAtivo -> jogador : <b>1:</b> reivindicarRota(rota, cartas)
activate jogador

' O jogador primeiro verifica se a rota tem um dono
jogador -> rota : <b>2:</b> dono := getDono( ) : string
activate rota
rota --> jogador : <b>3:</b> dono (pode ser nulo)
deactivate rota

alt dono == null [Rota está livre]

    ' Ação de definir o jogador atual como dono da rota
    jogador ->> rota : <b>4:</b> setDono(self)
    activate rota
    deactivate rota

    ' O fluxo original continua...
    jogador -> rota :  <b>5:</b> pontos := calcularPontos( ) : int
    activate rota
    rota --> jogador : <b>6:</b> pontos
    deactivate rota

    jogador -> jogador : <b>7:</b> atualizarPontos(pontos)
    activate jogador
    deactivate jogador


    jogador ->> baralho : <b>8:</b> descartar(cartas)
    activate baralho
    deactivate baralho

    jogador --> jogadorAtivo : <b>9:</b> notificar("Rota reivindicada com sucesso!")

else Rota já ocupada

    ' Ação falha e o jogador é notificado
    jogador --> jogadorAtivo : <b>10:</b> notificar("Erro: Rota já está ocupada.")

end

deactivate jogador

@enduml
